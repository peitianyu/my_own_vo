# soft2

```
soft2流程:
    1. 通过前后四张图片提取匹配特征(soft2特征)
    2. 通过前后左相机匹配特征, 对极约束(ransac)计算相机位姿
    3. 使用前后四张图片优化标定外参与尺度
    4. 前后四帧图像做ba优化
特点, 以及所学:
    1. 从整体思路来看实际上算法并无新意, 不过思路十分清晰
        q1: 双目相机相较于单目的优势是什么?
            1. 可以通过baseline提供深度信息
            2. 可以提供更多的信息
            3. 通过匹配双目相机提高特征匹配准确度
        q2: 对于kitti数据而言, 该数据有何特点?
            1. 车体不存在纯旋转情况;
            2. 在z轴变化不会太大, 或者单位时间内的变化不会太大; 
            3. 含有大量的路面特征与天空特征 
        q3: 相机与激光的特点比较? 优劣点 
            1. 相机无法直接给出深度信息, 但在像素空间内鲁棒性更高
            2. 相机同样拥有很多类似与点云的算法, 并且同样比较直接(计算数量级相似)(对极约束/直接法 <==> icp)
            3. 相机提供了更多的信息, 但是激光的信息更加直接, 所以需要思考过滤信息的方式
            4. 对于点云而言可以直接构建点云地图, 用于储存历史信息, 而对于相机而言只能储存img, 数据量普遍比较大
            5. 相机拥有一些特殊信息, 如消失点等
        q4: 是否还有更多的先验信息
            1. 运动时速度普遍不会突变, 所以可以通过匀速模型预测里程, 提供先验信息

    2. 其本质思想是, 拥有非常好的landmark, 只要landmark足够优秀, 我定位也一定足够优秀, 这就对于特征点的设计要求非常高

    3. 对于特征点的思考:
        1. 特征点质量
        2. 特征点分布
        3. 特征点计算量
思路:
    1. 对于特征提取而言, 最困难的点在于时间消耗上, 能否避开? 比如通过直接法等, 尽量将流程减少
    2. 能否仅运算pose2d, 对于z轴更新的话通过其他方式实现(对于扫地机类应该会比较合适)
    3. ba优化的优点在于landmark普遍是固定的(在地图上), 是否可以记录一些特征特别优秀的点云, 用于ba优化
    4. 地面特征很有意思, 类似于鼠标光流, 可以用来更新位移(取近处一块区域直接法)
    5. 对于历史信息的使用, 可以构建地图, 但这个地图是一个可以通过懒惰计算来实现
    6. 对于相机定位而言普遍会受到光照强度的影响, 可否通过其他方式来优化, 比如hsv模型等
    7. 普遍相机标定时会拥有高度信息, 可否通过高度信息来优化精度或者降低计算量
    8. 天空普遍位于图像上方, 现实中也在无穷远处, 可否通过这个信息来优化
    9. 图片普遍有一些视角特点, 比如透视投影等

    1. 角度可以通过单应矩阵分解实现(每隔4m, 定义一个平面)
    2. 位置可以通过光流实现, 并且其中应该可以拥有融合的功能
```


TODO:
    1. pose_manager
    2. direct_method 


算法流程:
    1. 前端features_tracking
        a. 优秀特征提取
        b. 滑窗做BA优化, 同时优化点云与位姿
        c. 优化外参
    